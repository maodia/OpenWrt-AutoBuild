#
# This is free software, lisence use MIT.
# 参考以下各位大佬的action文件和实现思路,结合自身需求,顺便学习了一下action规范，写了一个基于lean的openwrt源码自动化构建镜像的配置
# Copyright (C) 2019 P3TERX <https://p3terx.com> <https://github.com/P3TERX/Actions-OpenWrt>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com> <https://github.com/KFERMercer/OpenWrt-CI>
# Copyright (C) 2019 esirplayground <https://www.youtube.com/c/esirplayground> <https://github.com/esirplayground/AutoBuild-OpenWrt>
# 
# 

name: Lean-OpenWrt-CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  #push:
    #branches:
      #- master
  
  # UTC 12:00 (UTC+8 20:00),every friday
  schedule:
    - cron: 0 12 1 1 *
  watch:
    types: [started]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          ref: master

      - name: Prepare build environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h

      - name: Clone source code
        env: 
          REPO_URL: https://github.com/coolsnowwolf/lede
          REPO_BRANCH: master
        run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

      - name: Update and Install feeds
        working-directory: ./openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Run custom command before compile
        env:
          BEFORE_SCRIPT: 'customize_before_compile.sh'		  
        run: |
          [ -e $BEFORE_SCRIPT ] && chmod +x ./$BEFORE_SCRIPT && ./$BEFORE_SCRIPT

      - name: Generate configuration file
        env:
            CUSTOM_CONFIG_FILE: 'myconfig.diff'
        run: |
          [ -e $CUSTOM_CONFIG_FILE ] && mv $CUSTOM_CONFIG_FILE ./openwrt/.config
          cd openwrt && make defconfig

      - name: Compile firmware
        working-directory: ./openwrt
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h

      - name: Run custom command after compile
        env:
          AFTER_SCRIPT: 'customize_after_compile.sh'		  
        run: |
          [ -e $AFTER_SCRIPT ] && chmod +x ./$AFTER_SCRIPT && ./$AFTER_SCRIPT

      - name: Prepare artifact
        run: |
          find ./openwrt/bin/targets/ -type d -name "packages" | xargs rm -rf {}
          find ./openwrt/bin/targets/ -type f -name "*.img" | xargs rm -rf 

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: Lean-OpenWrt-x64
          path: ./openwrt/bin/targets/x86/64
